# Updated tasks.yaml with comprehensive task definitions

# Core Terminal Assistant Tasks
process_command_task:
  description: >
    Process the user's terminal input: "{user_command}".
    Current working directory: {cwd}
    User context: {user_context}
    
    Analyze the intent and determine the appropriate action:
    1. File operations -> delegate to FileNavigator
    2. Code/command execution -> delegate to CodeExecutor  
    3. Web research -> delegate to WebResearcher
    4. System monitoring -> delegate to PerformanceMonitor
    5. Environment management -> delegate to EnvironmentManager
    6. Security analysis -> delegate to SecurityAnalyst
    7. Git operations -> delegate to GitManager
    8. Network diagnostics -> delegate to NetworkAnalyst
    9. Complex research -> delegate to Researcher
    
    Provide clear delegation instructions with all necessary context.
  expected_output: >
    Either a direct response for simple queries, or a clear delegation instruction
    to the appropriate specialist agent with all required context and parameters.
    Include current working directory updates if relevant.
  agent: terminal_commander
  async_execution: false

navigate_files_task:
  description: >
    Perform file system operation: "{file_request}"
    Current working directory: {cwd}
    
    Available operations:
    - List directory contents
    - Read file contents (including PDFs)
    - Change working directory
    - Create directories/files (with explicit permission)
    - File information and structure analysis
    
    For write operations, ensure explicit user permission is confirmed.
  expected_output: >
    Confirmation of action taken with results. Include file contents if read,
    directory listings if requested, or new CWD if changed.
    For permission-required operations without consent: 
    "Action [operation] requires explicit user permission for [target]."
  agent: file_navigator
  async_execution: false

execute_code_task:
  description: >
    Execute code or command: "{code_snippet}"
    Working directory: {cwd}
    
    Validate against SafeShellTool whitelist and safety protocols.
    Provide execution output, errors, and performance metrics if requested.
  expected_output: >
    Command output (stdout/stderr), execution status, and any relevant
    environment changes. If blocked: clear explanation of safety violation.
    Include execution time and performance data when available.
  agent: code_executor
  async_execution: false

web_search_task:
  description: >
    Conduct web search: "{search_query}"
    
    Find accurate, current information from reliable sources.
    For specific questions, provide direct answers.
    For general topics, provide comprehensive summaries.
  expected_output: >
    Concise, relevant information addressing the search query.
    Include source citations for specific facts, statistics, or quotes.
    Structure data appropriately (e.g., weather: temp, conditions, etc.).
  agent: web_researcher
  async_execution: false

system_monitor_task:
  description: >
    Monitor system performance: "{monitor_request}"
    
    Available monitoring options:
    - CPU usage and performance
    - Memory utilization
    - Disk usage and I/O
    - Network activity
    - Process information
    - System health overview
  expected_output: >
    Detailed system metrics in JSON format with human-readable summaries.
    Include performance insights and optimization recommendations when relevant.
  agent: performance_monitor
  async_execution: false

profile_execution_task:
  description: >
    Profile command execution: "{command}"
    
    Execute the command while measuring performance metrics including
    execution time, resource usage, and success status.
  expected_output: >
    JSON object with execution results: status, duration_s, resource_usage,
    and command output or error details.
  agent: performance_monitor
  async_execution: false

# Research and Analysis Tasks
comprehensive_research_task:
  description: >
    Conduct thorough research on: "{topic}"
    Current year context: {current_year}
    
    Research focus areas:
    - Current developments and trends
    - Key factual information
    - Expert opinions and analyses
    - Relevant statistics and data
    - Recent news and updates
  expected_output: >
    Structured research findings with 10-15 key points covering the most
    relevant and current information about the topic. Include source
    attribution and credibility indicators.
  agent: researcher
  async_execution: false

generate_report_task:
  description: >
    Create comprehensive report on: "{topic}"
    Based on research findings: {research_context}
    
    Report structure:
    1. Executive Summary
    2. Detailed Analysis Sections
    3. Key Findings and Insights
    4. Conclusions and Recommendations
  expected_output: >
    Complete markdown report without code block wrapping.
    Include introduction, detailed sections with analysis,
    and actionable conclusions. Maintain professional formatting.
  agent: reporting_analyst
  async_execution: false

# Specialized Tool Tasks
manage_environment_task:
  description: >
    Environment management operation: "{env_operation}"
    
    Supported operations:
    - Get environment variable value
    - Set environment variable
    - List all environment variables
    - Unset environment variable
    
    Parameters: {env_params}
  expected_output: >
    Result of environment operation with confirmation of changes made.
    For list operations: formatted environment variable dump.
    For get operations: variable value or "not found" message.
  agent: environment_manager
  async_execution: false

security_analysis_task:
  description: >
    Perform security analysis on: "{target_file}"
    
    Conduct static code analysis using security scanning tools.
    Identify potential vulnerabilities, security issues, and
    provide recommendations for improvement.
  expected_output: >
    Security analysis report in JSON format with identified issues,
    severity levels, and recommended fixes. Include summary of
    overall security posture.
  agent: security_analyst
  async_execution: false

git_operation_task:
  description: >
    Git operation: "{git_action}"
    Repository path: {repo_path}
    Additional parameters: {git_params}
    
    Supported operations:
    - status, clone, pull, push, commit
    - branch management and checkout
    - Repository information
  expected_output: >
    Git command result with status information.
    For status: current branch and changes.
    For operations: confirmation and any relevant output.
    Include error handling for failed operations.
  agent: git_manager
  async_execution: false

network_diagnostic_task:
  description: >
    Network diagnostic: "{diagnostic_type}"
    Target host: {host}
    Parameters: {net_params}
    
    Available diagnostics:
    - ping (connectivity testing)
    - traceroute (path analysis)
    - nslookup (DNS resolution)
  expected_output: >
    Network diagnostic results with connectivity status,
    response times, routing information, or DNS resolution details.
    Include error analysis for failed connections.
  agent: network_analyst
  async_execution: false

create_visualization_task:
  description: >
    Create data visualization: "{plot_request}"
    Plot parameters: {plot_params}
    
    Supported plot types:
    - Line plots for trends
    - Bar charts for comparisons
    - Custom formatting and labeling
  expected_output: >
    Confirmation of plot creation with filename and location.
    Include plot description and any formatting details applied.
  agent: performance_monitor
  async_execution: false