[project]
name = "codex_simulator"
version = "0.1.0"
description = "codex_simulator using crewAI with Flow orchestration"
authors = [{ name = "Your Name", email = "you@example.com" }]
requires-python = ">=3.10,<=3.13"
dependencies = [
    # Core CrewAI with specific constraints
    "crewai[tools]>=0.86.0,<0.90.0",  # Narrower version range
    "pydantic>=2.4.2,<2.10.0",  # More specific upper bound
    
    # LangChain components with compatible versions
    "langchain-core>=0.1.52,<0.2.0",  # Pin to 0.1.x series
    "langchain-google-genai>=0.0.9,<0.1.0",  # Pin to 0.0.x series
    
    # Google AI with compatible protobuf versions (FIXED)
    "google-generativeai>=0.3.2,<0.4.0",  # Pin to 0.3.x series
    "google-ai-generativelanguage>=0.4.0,<0.5.0",  # Pin compatible version
    "google-api-core>=2.15.0,<2.20.0",
    
    # Other dependencies with constraints
    "python-dotenv>=1.0.0,<2.0.0",
    "requests>=2.28.0,<3.0.0",
    "beautifulsoup4>=4.12.0,<5.0.0",
    "pypdf>=4.0.0,<5.0.0",
    "langchain-text-splitters>=0.0.1,<0.1.0",
    "matplotlib>=3.5.0,<4.0.0",
    "psutil>=5.9.0,<6.0.0",
    "GitPython>=3.1.0,<4.0.0",
    "bandit>=1.7.0,<2.0.0",
    
    # FIXED: Use protobuf 4.x to be compatible with Google AI libs
    "protobuf>=4.21.6,<5.0.0",
    "jsonschema>=4.22.0,<4.23.0",
    "jinja2>=3.1.2,<3.2.0",
    "packaging>=23.2,<24.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
]
mcp = [
    "mcpadapt>=0.1.0",
    "httpx>=0.24.0",
]

[project.scripts]
# Entry points for command-line usage
codex_simulator = "codex_simulator.main:run"
terminal_flows = "codex_simulator.main:run_terminal_assistant_with_flows"
terminal_assistant = "codex_simulator.main:terminal_assistant"
hybrid_mode = "codex_simulator.main:run_hybrid_mode"
claude_repl = "codex_simulator.main:run_claude_repl_entrypoint"
test = "codex_simulator.main:test"
train = "codex_simulator.main:train"
replay = "codex_simulator.main:replay"
run_all_tests = "src.codex_simulator.tests.run_all_tests:run_tests"
codex-mcp-server = "codex_simulator.main:run_mcp_server_standalone"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.crewai]
type = "crew"
